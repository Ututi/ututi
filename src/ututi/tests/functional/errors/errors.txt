Tests for our error views
-------------------------

    >>> browser = Browser.logIn('user@ututi.lt', 'password')

Sometimes errors happen, and when that does, we display a simple page,
that explains that an error has happened, and suggests the user to go
and do something else:

    >>> browser.open('http://localhost/admin/error')
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 500: Internal Server Error

    >>> browser.printQuery("id('error-message')/text()")
    Our highly trained monkeys are fixing this problem right now.

    >>> browser.printQuery("//button//text()")
    search
    Shout!
    Kick a monkey!


User can send error message by clicking shout on monkeys
    >>> browser.open('http://localhost/admin/error')
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 500: Internal Server Error

    >>> browser.getControl('If You wish, You can shout at the monkeys:').value = "Bad bad monkeys"
    >>> browser.getControl('shout', index=1).click()
    >>> from ututi.lib.mailer import mail_queue

    >>> mail_queue.pop().payload()
    'Bad bad monkeys'

After that user will be redirected to "search" area and the flash message will be shown

     >>> browser.url
     'http://localhost/profile/browse'

     >>> browser.printQuery("//div[@class='flash-message']/span/text()")
     Monkeys are ashamed of what you said and are now working even harder to fix the problem. Until they do that, try to search for something else.

For user's satisfaction "Kick monkeys" button is also available.
It adds a constant error message to what user has typed:

    >>> browser.open('http://localhost/admin/error')
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 500: Internal Server Error

    >>> browser.getControl('If You wish, You can shout at the monkeys:').value = "Bad bad monkeys"
    >>> browser.getControl('kick').click()
    >>> from ututi.lib.mailer import mail_queue

    >>> print mail_queue.pop().payload()
    User kicked monkeys
    Bad bad monkeys

After that user will be redirected to "search" area and the flash message will be shown

     >>> browser.url
     'http://localhost/profile/browse'

     >>> browser.printQuery("//div[@class='flash-message']/span/text()")
     Ouch! Monkeys were kicked and are trying to work harder.  Until they fix this, try to search for something else.

While not found pages show a flash message indicating that the url
they have entered is not found, and include the search form in the
page itself:

    >>> browser.open('http://localhost/admin/404')
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> browser.printQuery("//div[@class='flash-message']/span")
    <span class="close-link hide-parent">
      <img alt="Close" src="/images/details/icon_delete.png" />
    </span>
    <span>Document at http://localhost/admin/404 was not found, but maybe you are interested in something else?</span>

    >>> browser.printQuery("id('mainContent')/h1")
    <h1>Search</h1>

Some views are not accessible to simple users:

    >>> browser.open('http://localhost/admin')
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 403: Forbidden

Our access denied page looks just like an error page, but with a
different error message:

    >>> browser.printQuery("id('mainContent')")
    <div id="mainContent">
      <div id="flash-messages"></div>
      <h1>Permission denied!</h1>
      <div>You do not have the rights to see this page, or perform this action. Go back or go to the search page please.</div>
      <a href="/search">go find something else</a>
    </div>

If a user gets a 404 page while not being logged-in and then logs in, he should be redirected to his homepage (feed).

    >>> browser = Browser()
    >>> browser.open('http://localhost/asdfasdf')
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> form = browser.getForm('loginForm')
    >>> form.getControl('Email').value = "admin@uni.ututi.com"
    >>> form.getControl('Password').value = "asdasd"
    >>> form.getControl('Login').click()

    >>> browser.url
    'http://localhost/home/feed'
