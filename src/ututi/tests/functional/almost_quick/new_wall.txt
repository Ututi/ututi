Functional test for the new wall
================================

    >>> from ututi.lib.mailer import mail_queue

    >>> def printWallEvents(browser):
    ...     browser.printCssQuery(".wall-entry .event-title, .wall-entry .event-content", include_attributes=['class'], include_classes=['event-content', 'event-title'])

Login and visit the wall.

    >>> user3 = Browser.logIn('user3@ututi.lt', 'password')
    >>> user3.url
    'http://localhost/home/feed'

The page title should say "News feed":

    >>> user3.printQuery("//h1[@class='page-title']/text()")
    News feed

Right next to the title there's a link to wall settings:

    >>> user3.getLink("News feed settings").click()
    >>> user3.url
    'http://localhost/profile/edit/wall'

    >>> user3.goBack()

The wall currently lists several simple events:

    >>> user3.printQuery("//div[contains(@class, 'wall-entry')]//text()")
    Adminas Adminovix has created the group Moderatoriai 0 seconds ago
    Adminas Adminovix has joined the group Moderatoriai 0 seconds ago
    You have joined the group Moderatoriai 0 seconds ago
    Adminas Adminovix has created the subject Matematin&#279; analiz&#279; 0 seconds ago

We will start with mailing list messaging. To test it, we
will log in few other users that belong to the same group:

    >>> user = Browser.logIn('user@ututi.lt', 'password')
    >>> user.url
    'http://localhost/home/feed'
    >>> admin = Browser.logIn('admin@uni.ututi.com', 'asdasd')
    >>> admin.getLink('News feed').click()

Admin sends a message to group Moderatoriai:

    >>> form = admin.getForm(id='message_form')
    >>> form.getControl(name='rcpt_group').displayValue = ['Moderatoriai']
    >>> form.getControl(name='subject').value = 'Mailinglist message title'
    >>> form.getControl(name='message').value = 'Mailinglist message'
    >>> form.getControl('Send').click()

    >>> admin.url
    'http://localhost/home/feed'

User3 can see his message on his wall:

    >>> user3.reload()
    >>> printWallEvents(user3)
    <span class="event-title">
      <a>Adminas Adminovix</a> has posted a new message <a>Mailinglist message title</a> to the group <a>Moderatoriai</a>
    </span>
    ...

The email message also gets sent:

    >>> len(mail_queue)
    1

    >>> mail_queue.pop().payload()
    'Mailinglist message'

We can reply these messages from the wall:

    >>> form = user3.getForm(name='reply-form', index=0)
    >>> form.getControl(name='message').value = 'Mailinglist message reply'
    >>> form.getControl("Send reply").click()
    >>> user3.url
    'http://localhost/home/feed'

If admin reloads his wall he will see this reply threaded to his original
message. (Note: here we click link instead of reload so that testbrowser
does not resubmit the form.)

    >>> admin.getLink('News feed').click()
    >>> printWallEvents(admin)
    <span class="event-title">
        You have posted a new message <a>Mailinglist message title</a> to the group <a>Moderatoriai</a>
    </span>
    <span class="event-content">Mailinglist message</span>
    <span class="event-content">Mailinglist message reply</span>
    ...

    >>> print mail_queue.pop().payload()
    Mailinglist message reply

TODO: test if email replies a threaded in the wall properly.

To test forum post threading we will use the group will forum enabled:

    >>> form = admin.getForm(id='message_form')
    >>> form.getControl(name='rcpt_group').displayValue = ['Testing group']
    >>> form.getControl(name='subject').value = 'Forum post title'
    >>> form.getControl(name='message').value = 'Forum post'
    >>> form.getControl('Send').click()

    >>> admin.url
    'http://localhost/home/feed'

    >>> printWallEvents(admin)
    <span class="event-title">
        You have posted a new message <a>Forum post title</a> in the forum <a>Testing group</a>
    </span>
    <span class="event-content">Forum post</span>
    ...

User can immediately reply to this forum thread from his wall:

    >>> admin.open(admin.url)
    >>> form = admin.getForm(name='reply-form', index=0)
    >>> form.getControl(name='message').value = 'Forum post reply'
    >>> form.getControl("Send reply").click()
    >>> admin.url
    'http://localhost/home/feed'

    >>> printWallEvents(admin)
    <span class="event-title">
        You have posted a new message <a>Forum post title</a> in the forum <a>Testing group</a>
    </span>
    <span class="event-content">Forum post</span>
    <span class="event-content">Forum post reply</span>
    ...

Group's mailinglist thread is also displayed in group's wall:

    >>> admin.getLink("Moderatoriai", url='/group/moderators').click()
    >>> printWallEvents(admin)
    <span class="event-title">
        You have posted a new message <a>Mailinglist message title</a> to the group <a>Moderatoriai</a>
    </span>
    <span class="event-content">Mailinglist message</span>
    <span class="event-content">Mailinglist message reply</span>
    <span class="event-title">
        You have created the group <a>Moderatoriai</a>
    </span>
    ...

User can also reply to these threads from group's wall:
(Note, we post the form and set referer manually, because testbrowser would lose it.)

    >>> form = admin.getForm(name='reply-form', index=0)
    >>> res = admin.app.post(form.action,
    ...                      params={'message': 'Mailinglist message reply from group wall'},
    ...                      headers=[('referer', admin.url)])
    >>> print res.status, res.location
    302 Found http://localhost/group/moderators/home

    >>> admin.open(res.location)
    >>> printWallEvents(admin)
    <span class="event-title">
        You have posted a new message <a>Mailinglist message title</a> to the group <a>Moderatoriai</a>
    </span>
    <span class="event-content">Mailinglist message</span>
    <span class="event-content">Mailinglist message reply</span>
    <span class="event-content">Mailinglist message reply from group wall</span>
    ...

    >>> print mail_queue.pop().payload()
    Mailinglist message reply from group wall

The same applies to forums: thread is displayed in groups wall.
The Testing group has forums enabled, so we will use this group to test this
functionality:

    >>> admin.getLink("Testing group").click()
    >>> printWallEvents(admin)
    <span class="event-title">
      You have posted a new message <a>Forum post title</a> in the forum <a>Testing group</a>
    </span>
    <span class="event-content">Forum post</span>
    <span class="event-content">Forum post reply</span>
    <span class="event-title">
      You have created the group <a>Testing group</a>
    </span>
    <span class="event-title">
      You have joined the group <a>Testing group</a>
    </span>
    <span class="event-title">
      <a>Second user</a> has joined the group <a>Testing group</a>
    </span>

    >>> form = admin.getForm(name='reply-form', index=0)
    >>> res = admin.app.post(form.action,
    ...                      params={'message': 'Forum post reply from group wall'},
    ...                      headers=[('referer', admin.url)])
    >>> print res.status, res.location
    302 Found http://localhost/group/testgroup/home

    >>> admin.open(res.location)
    >>> printWallEvents(admin)
    <span class="event-title">
        You have posted a new message <a>Forum post title</a> in the forum <a>Testing group</a>
    </span>
    <span class="event-content">Forum post</span>
    <span class="event-content">Forum post reply</span>
    <span class="event-content">Forum post reply from group wall</span>
    ...
