Test teacher's "teaching subjects" functionality
================================================

Let's login as a verified teacher:

    >>> browser = Browser()
    >>> form = browser.getForm('loginForm')
    >>> form.getControl('Email').value = "benas@ututi.lt"
    >>> form.getControl('Password').value = "password"
    >>> form.getControl('Login').click()

This teacher hasn't specified his location, so the home page
asks him to do it right now:

    >>> browser.getControl('University').value = 'Vilniaus universitetas'
    >>> browser.getControl('Department').value = 'Ekonomikos fakultetas'
    >>> browser.getControl('save').click()

A link to the specified department appears:

    >>> browser.getLink('Go to my department').click()
    >>> browser.printQuery("//h1[@class='pageTitle']/text()")
    Ekonomikos fakultetas

XXX now there should be a way to find subjects for adding, even from
department's page. Benas visits subject's page directly:

    >>> browser.open('http://localhost/subject/vu/mat_analize')

Currently portlet shows lecturer that was typed in when filling out
subject's information:

    >>> browser.printQuery(".dalyko-info .teacher-list li", selector='cssselect', include_attributes=[''])
    <li>prof. E. Misevi&#269;ius</li>

Teacher can click "I teach this course" button. He is then stays on
the course page and a flash message is displayed:

    >>> browser.getControl("I teach this course").click()
    >>> browser.url
    'http://localhost/subject/vu/mat_analize'

    >>> browser.printQuery("//div[@class='flash-message']/span/text()")
    The course has been added to your taught courses list.

Also, the course information portlet now shows Benas as the main lecturer
for the course (this is expected behavior, "static" lecturer is not shown
if there are ututi teachers for the subject):

    >>> browser.printQuery(".dalyko-info .teacher-list li", selector='cssselect', include_attributes=[''])
    <li>
        <a>Benas</a>
    </li>

If we click on the link, we are redirected to Benas' page:

    >>> browser.getLink('Benas').click()
    >>> browser.url
    'http://localhost/user/5'

The selected course is now displayed in his home page:

    >>> browser.getLink('Home').click()
    >>> browser.printQuery("id('subject_list')//div[@class='subject-description-list']//dt//text()")
    Matematinė analizė

Teacher can click "Create wiki page" link to be directed straight to 
page creation view:

    >>> browser.getLink("Create wiki page").click()
    >>> browser.url
    'http://localhost/subject/vu/mat_analize/pages/add'

As for files, there is no "add file" view available, and subjects home
page is responsible for that functionality, so teacher is directed there:

    >>> browser.goBack()
    >>> browser.getLink("Upload file").click()
    >>> browser.url
    'http://localhost/subject/vu/mat_analize'

Let's teach one more subject:

    >>> browser.open('http://localhost/subject/vu/logika')
    >>> browser.getControl("I teach this course").click()

It is also listed in the home page:

    >>> browser.getLink('Home').click()
    >>> browser.printQuery("id('subject_list')//div[@class='subject-description-list']//dt//text()")
    Matematinė analizė
    Logika

He can click the link to visit some course's home page:

    >>> browser.getLink('Matematinė analizė').click()

If teacher wants to, he can say that he is no longer teaching this course.
Again, an appropriate flash message is displayed:

    >>> browser.getControl("Remove from my taught courses").click()
    >>> browser.url
    'http://localhost/subject/vu/mat_analize'

    >>> browser.printQuery("//div[@class='flash-message']/span/text()")
    The course has been removed from your taught courses list.

It doesn't show in the home page as well:

    >>> browser.getLink('Home').click()
    >>> browser.printQuery("id('subject_list')//div[@class='subject-description-list']//dt//text()")
    Logika

Teacher can also say that he is no longer teaching a course directly from his
home page. If he clicks the button, he stays on the home page and flash message
appears:

    >>> browser.getLink(url='/profile/unteach_subject?subject_id=4').click()
    >>> browser.printQuery("//div[@class='flash-message']/span/text()")
    The course has been removed from your taught courses list.
