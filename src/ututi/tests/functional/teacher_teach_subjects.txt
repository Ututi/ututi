Test teacher's "teaching subjects" functionality
================================================

Let's login as a verified teacher:

    >>> browser = Browser.logIn('benas@ututi.lt', 'password')

XXX now there should be a way to find subjects for adding, even from
department's page. Benas visits subject's page directly:

    >>> browser.open('http://localhost/subject/vu/mat_analize')

Currently portlet shows lecturer that was typed in when filling out
subject's information:

    >>> browser.printCssQuery("#subject-teachers-portlet .subject-teacher", strip=True)
    <li> Lecturer: <br /> prof. E. Misevi&#269;ius </li>

Teacher can click "I teach this course" button. He is then stays on
the course page and a flash message is displayed:

    >>> browser.getControl("I teach this course").click()
    >>> browser.url
    'http://localhost/subject/vu/mat_analize'

    >>> browser.printQuery("//div[@class='flash-message']/span//text()")
    Matematin&#279; analiz&#279; has been added to your taught courses list.

Also, the course information portlet now shows Benas as the main lecturer
for the course (this is expected behavior, "static" lecturer is not shown
if there are ututi teachers for the subject):

    >>> browser.printCssQuery("#subject-teachers-portlet .subject-teacher", strip=True)
    <li> Lecturer: <br /> <a>Benas</a> </li>

If we click on the link, we are redirected to Benas' page:

    >>> browser.getLink('Benas').click()
    >>> browser.url
    'http://localhost/user/5'

The selected course is now displayed in his home page:

    >>> browser.getLink('Home').click()
    >>> browser.printCssQuery('.subject-description-list dt a', strip=True)
    <a>Matematin&#279; analiz&#279;</a>

Teacher can click "Create wiki page" link to be directed straight to 
page creation view:

    >>> browser.getLink("Create wiki page").click()
    >>> browser.url
    'http://localhost/subject/vu/mat_analize/notes/add'

As for files, there is no "add file" view available, and subjects home
page is responsible for that functionality, so teacher is directed there:

    >>> browser.goBack()
    >>> browser.getLink("Upload file").click()
    >>> browser.url
    'http://localhost/subject/vu/mat_analize/files'

He can click the link to visit some course's home page:

    >>> browser.goBack()
    >>> browser.getLink('Matematinė analizė').click()

If teacher wants to, he can say that he is no longer teaching this course.
Again, an appropriate flash message is displayed:

    >>> browser.getControl("Remove from my taught courses").click()
    >>> browser.url
    'http://localhost/subject/vu/mat_analize'

    >>> browser.printQuery("//div[@class='flash-message']/span//text()")
    Matematin&#279; analiz&#279; has been removed from your taught courses list.

It doesn't show in the home page as well:

    >>> browser.getLink('Home').click()
    >>> browser.printQuery("id('subject_list')//div[@class='subject-description-list']//dt//text()")

Teacher can also say that he is no longer teaching a course directly from his
home page. If he clicks the button, he stays on the home page and flash message
appears. So let's again add and remove the course from taught courses list:

    >>> browser.open('http://localhost/subject/vu/mat_analize')
    >>> browser.getControl("I teach this course").click()
    >>> browser.url
    'http://localhost/subject/vu/mat_analize'

    >>> browser.printQuery("//div[@class='flash-message']/span//text()")
    Matematin&#279; analiz&#279; has been added to your taught courses list.

    >>> browser.getLink('Home').click()
    >>> browser.getLink(url='/profile/unteach_subject?subject_id=3').click()
    >>> browser.printQuery("//div[@class='flash-message']/span//text()")
    Matematin&#279; analiz&#279; has been removed from your taught courses list.
