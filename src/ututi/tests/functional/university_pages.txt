University and faculty pages
============================

    >>> from pkg_resources import resource_stream
    >>> from ututi.tests.functional import make_file

Let's log in first.

    >>> browser = Browser.logIn()
    >>> browser.open('http://localhost/structure')

    >>> browser.printQuery("id('location_structure')//li/a[@class='tag_link']/text()")
    U-niversity
    D-epartment
    Vilniaus universitetas
    Ekonomikos fakultetas
    Geografijos fakultetas

We should be able to click on a link that leads us to the page of the faculty.
    >>> browser.getLink('Vilniaus universitetas').click()
    >>> browser.url
    'http://localhost/school/vu'

    >>> browser.printQuery('//h1/text()')
    Vilniaus universitetas

    >>> browser.printQuery('//div[@class="tip"]/text()')
    This is a list of all the recent events in the subjects and groups of this university.

    >>> browser.printQuery('id("university-list")//div[@class="title"]/a/text()')
    Ekonomikos fakultetas
    Geografijos fakultetas

There is a search form on this page and we should be able to use it.
    >>> browser.getLink('Subjects').click()
    >>> browser.getControl(name='text', index=1).value = 'prof.'
    >>> browser.getControl('Search', index=1).click()
    >>> browser.url
    'http://localhost/school/vu/subjects?text=prof.&obj_type=subject%2Cfile%2Cpage'

    >>> browser.printQuery("//div[@class='search-item snippet-subject']/a/text()")
    Matematin&#279; analiz&#279;

The information portlet should show the most important information about the university:
    >>> browser.printQuery("id('location_info_portlet-header')//h2/a/text()")
    University information
    >>> browser.printQuery("//ul[@class='uni-info']/li")
    <li>
      <span class="bold">1</span> subject
    </li>
    <li>
      <span class="bold">2</span> groups
    </li>
    <li>
      <span class="bold">0</span> files
     </li>


We should be able to edit the information of the location tag.
    >>> browser.getLink('Edit').click()
    >>> browser.getControl('Title').value = 'Kapsuko universitetas'
    >>> browser.getControl('Short title').value = 'KU'
    >>> browser.getControl('Website').value = 'http://ku.lt'
    >>> browser.getControl('Save').click()

    >>> browser.url
     'http://localhost/school/ku'

And the updated information should be visible in the info portlet
    >>> browser.printQuery("id('location_info_portlet-content')//h2/text()")
    Kapsuko universitetas
    >>> browser.printQuery("id('location_info_portlet-content')//a/text()")
    http://ku.lt
    Edit

Let's see if the faculty page looks ok.
    >>> browser.getLink('Geografijos fakultetas').click()
    >>> browser.url
    'http://localhost/school/ku/gf'

    >>> browser.printQuery("id('location_info_portlet-content')//h2/text()")
    Geografijos fakultetas
    >>> browser.printQuery("//ul[@class='uni-info']/li")
    <li>
      <span class="bold">0</span> subjects
    </li>
    <li>
      <span class="bold">0</span> groups
    </li>
    <li>
      <span class="bold">0</span> files
    </li>

Let's try to edit it.
    >>> browser.getLink('Edit').click()

We should only be able to enter URL-ready short titles:

    >>> browser.getControl('Short title').value = 'Text with breaks'
    >>> browser.getControl('Save').click()
    >>> browser.printQuery("//span[@class='error-message']/text()")
    The field may only contain letters, numbers and the characters + - _

What is more, these fields should be allowed to clash with existing ones:
    >>> browser.getControl('Short title').value = 'ef'
    >>> browser.getControl('Save').click()
    >>> browser.printQuery("//span[@class='error-message']/text()")
    Such short title already exists, choose a different one.

Even with a different case:
    >>> browser.getControl('Short title').value = 'EF'
    >>> browser.getControl('Save').click()
    >>> browser.printQuery("//span[@class='error-message']/text()")
    Such short title already exists, choose a different one.

They need to be unique.

    >>> browser.getControl('Short title').value = 'ggf'
    >>> browser.getControl('Logo').add_file(*make_file('test_logo.png'))
    >>> browser.getControl('Save').click()
    >>> browser.printQuery("//span[@class='error-message']/text()")

Oh, and we can upload logos too

    >>> browser.printQuery("id('structure-logo')")
    <img class="portlet-logo" id="structure-logo" src="/structure/5/logo/70/70" alt="logo" />

University and department pages have tabs from now on:
    >>> browser = Browser()
    >>> browser.open('http://localhost/school/ku/ggf')
    >>> browser.getLink('Groups').click()
    >>> browser.url
    'http://localhost/school/ku/ggf/groups'

    >>> browser.open('http://localhost/school/ku')
    >>> browser.getLink('Groups').click()
    >>> browser.url
    'http://localhost/school/ku/groups'

    >>> browser = Browser()
    >>> browser.open('http://localhost/school/ku/ggf')
    >>> browser.getLink('Subjects').click()
    >>> browser.url
    'http://localhost/school/ku/ggf/subjects'

    >>> browser.open('http://localhost/school/ku')
    >>> browser.getLink('Subjects').click()
    >>> browser.url
    'http://localhost/school/ku/subjects'
