University and faculty pages
============================

    >>> from pkg_resources import resource_stream
    >>> from ututi.tests.functional import make_file

Let's look at public universities page.

    >>> public_browser = Browser()
    >>> public_browser.open('http://localhost/browse')

We should be able to click on a link that leads us to the page of the faculty.
    >>> public_browser.getLink('Vilniaus universitetas').click()
    >>> public_browser.url
    'http://localhost/school/vu'

    >>> public_browser.printCssQuery('h1', strip=True)
    <h1>Vilniaus universitetas</h1>

    >>> public_browser.printCssQuery('.sub-title', strip=True)
    <div>Private social network</div>

    >>> public_browser.printCssQuery('.university-box .title a', strip=True)
    <a>Ekonomikos fakultetas</a>
    <a>Geografijos fakultetas</a>

There is a search form on this page and we should be able to use it.
    >>> public_browser.getLink('Subjects').click()
    >>> public_browser.getControl(name='text').value = 'prof.'
    >>> public_browser.getControl('Search').click()
    >>> public_browser.url
    'http://localhost/school/vu/subjects?text=prof.&obj_type=subject'

    >>> public_browser.printCssQuery('.search-item.snippet-subject .item-title a', strip=True)
    <a>Matematin&#279; analiz&#279;</a>

The information portlet shows some statistics about the university:

    >>> public_browser.printCssQuery("#location-info-portlet li", strip=True)
    <li>1 Subject</li>
    <li>1 Group</li>
    <li>0 Members</li>
    <li>0 Files</li>


Let's log and test university page from logedin user's perpectives.

    >>> browser = Browser.logIn()
    >>> browser.open('http://localhost/structure')

    >>> browser.printQuery("id('location_structure')//li/a[@class='tag_link']/text()")
    U-niversity
    D-epartment
    Vilniaus universitetas
    Ekonomikos fakultetas
    Geografijos fakultetas

    >>> browser.getLink('Vilniaus universitetas').click()


We should be able to edit the information of the location tag.
    >>> browser.getLink('Edit information').click()
    >>> browser.getControl('Title').value = 'Kapsuko universitetas'
    >>> browser.getControl('Short title').value = 'KU'
    >>> browser.getControl('Website').value = 'http://ku.lt'
    >>> browser.getControl('Save').click()

    >>> browser.url
    'http://localhost/school/ku'

And the updated information should be visible in the university page:

    >>> browser.printCssQuery(".page-title", strip=True)
    <h1>Kapsuko universitetas</h1>
    >>> browser.printCssQuery("#location-info-portlet a", strip=True)
    <a>http://ku.lt</a>

Let's see if the faculty page looks ok.
    >>> browser.open('http://localhost/school/ku/gf')

    >>> browser.printCssQuery(".page-title", strip=True)
    <h1>Geografijos fakultetas</h1>
    >>> browser.printCssQuery("#location-info-portlet li", strip=True)
    <li>0 Subjects</li>
    <li>0 Groups</li>
    <li>0 Members</li>
    <li>0 Files</li>

Let's try to edit it.
    >>> browser.getLink('Edit information').click()

We should only be able to enter URL-ready short titles:

    >>> browser.getControl('Short title').value = 'Text with breaks'
    >>> browser.getControl('Save').click()
    >>> browser.printQuery("//span[@class='error-message']/text()")
    The field may only contain letters, numbers and the characters + - _

What is more, these fields should be allowed to clash with existing ones:
    >>> browser.getControl('Short title').value = 'ef'
    >>> browser.getControl('Save').click()
    >>> browser.printQuery("//span[@class='error-message']/text()")
    Such short title already exists, choose a different one.

Even with a different case:
    >>> browser.getControl('Short title').value = 'EF'
    >>> browser.getControl('Save').click()
    >>> browser.printQuery("//span[@class='error-message']/text()")
    Such short title already exists, choose a different one.

They need to be unique.

    >>> browser.getControl('Short title').value = 'ggf'

Oh, and we can upload logos too:

    >>> browser.getControl('Logo').add_file(*make_file('test_logo.png'))
    >>> browser.getControl('Save').click()
    >>> browser.printQuery("//span[@class='error-message']/text()")

    >>> browser.url
    'http://localhost/school/ku/ggf'

    >>> browser.printCssQuery("#location-logo-portlet img")
    <img src="/structure/5/logo/140" alt="Geografijos fakultetas" />

University and department pages have menu from now on:
    >>> browser = Browser()
    >>> browser.open('http://localhost/school/ku/ggf')
    >>> browser.getLink('Subjects').click()
    >>> browser.url
    'http://localhost/school/ku/ggf/subjects'

    >>> browser.open('http://localhost/school/ku')
    >>> browser.getLink('Subjects').click()
    >>> browser.url
    'http://localhost/school/ku/subjects'

    >>> browser = Browser()
    >>> browser.open('http://localhost/school/ku/ggf')
    >>> browser.getLink('Teachers').click()
    >>> browser.url
    'http://localhost/school/ku/ggf/teachers'

    >>> browser.open('http://localhost/school/ku')
    >>> browser.getLink('Teachers').click()
    >>> browser.url
    'http://localhost/school/ku/teachers'
