Group members views
===================

    >>> from ututi.lib.mailer import mail_queue
    >>> def printEmails():
    ...     for email in mail_queue:
    ...         print email.recipients
    ...         print email.payload()


First of all let's log in;

    >>> browser = Browser.logIn()

Let's find the group.

    >>> browser.open('http://localhost/group/moderators')
    >>> browser.getLink('Members').click()
    >>> print browser.url
    http://localhost/group/moderators/members

Let's try and invite a new member to the group.

    >>> emails = 'user@ututi.lt, loser@ututi.lt, user2@ututi.lt, foo'
    >>> browser.getControl(name='emails').value = emails
    >>> browser.getControl('Invite').click()
    >>> browser.printQuery("//div[@class='flash-message']/span/text()")
    Users invited.
    Invalid email addresses detected: foo

The user should be listed in the invited users table.
    >>> browser.printQuery("//table[@class='group-invitations']/tr/td[@class='email']/text()")
    user2@ututi.lt
    loser@ututi.lt
    user@ututi.lt

    >>> len(mail_queue)
    3


The link to send another invitation should send another invitation email.

    >>> browser.getControl('Send again', index=1).click()
    >>> len(mail_queue)
    4

In case we change our mind, the group moderator can cancel the invitation.
    >>> browser.getControl('Cancel', index=2).click()
    >>> browser.printQuery("//table[@class='group-invitations']/tr/td[@class='email']/text()")
    user2@ututi.lt
    user@ututi.lt

There is also a table listing all the group's members:

    >>> browser.printQuery("//table[@class='group-members']/tr/td/a/text()")
    Adminas Adminovix
    Third user

    >>> mail_queue[:] = []

We need another member in the group, so let's join as the invited user.

    >>> browser2 = Browser.logIn("user@ututi.lt", "password")

The user should be presented with a flash message inviting him to join the group.

    >>> browser2.printQuery("//div[@class='flash-message']/span/text()")
    Adminas Adminovix has sent you an invitation to group Moderatoriai. Do you want to become a member of this group?

Let's accept this invitation.

    >>> browser2.getControl("Accept").click()
    >>> browser2.printQuery("//div[@class='flash-message']/span/text()")
    Congratulations! You are now a member of the group 'Moderatoriai'

    >>> browser2.getLink('Moderatoriai').click()
    >>> browser2.getLink('Members').click()
    >>> browser2.printQuery("//a[@class='link-to-user-profile']/text()")
    Adminas Adminovix
    Third user
    Alternative user

Admin should be marked:

    >>> browser2.printQuery("//div[@class='user-logo-link admin-logo-link']/div/a/text()")
    Adminas Adminovix

Now let's return to the admin session and see if we can set the role of the new user.

    >>> browser.reload()
    >>> browser.printQuery("//table[@class='group-members']/tr/td/a/text()")
    Adminas Adminovix
    Alternative user
    Third user

For kicks, let's try to make ourself a non-admin.

    >>> form = browser.getForm(id='update-membership-1')
    >>> form.getControl(name='role').value
    ['administrator']

    >>> form.getControl(name='role').displayOptions
    ['Administrator']

Aww, we can't do that, because the system does not allow us to change
our status. Now let's set the role of the other guy:

    >>> form = browser.getForm(id='update-membership-2')
    >>> form.getControl(name='role').value
    ['member']
    >>> form.getControl(name='role').value = ['administrator']
    >>> form.getControl('Update').click()
    >>> browser.printQuery("//div[@class='flash-message']/span/text()")
    The status of the user Alternative user was updated.

Now let's see if the view for the user has changed.

    >>> browser2.reload()
    >>> browser2.printQuery('id("mainContent")//h2/text()')
    Invite your classmates
    Invite your classmates using Facebook
    Invited users (invitations not accepted yet)
    Group members

Let's use this ui to leave the group:

    >>> form = browser.getForm(id='update-membership-2')
    >>> form.getControl(name='role').displayOptions
    ['Administrator', 'Member', 'Leave group']

    >>> form.getControl(name='role').displayValue = ['Leave group']
    >>> form.getControl('Update').click()

And the user is not a member of this group anymore:

    >>> browser2.reload()
    Traceback (most recent call last):
    ...
    httperror_seek_wrapper: HTTP Error 403: Forbidden

What happens if we try to invite that member again?
    >>> browser = browser.logIn()
    >>> browser.open('http://localhost/group/moderators')
    >>> browser.getLink('Members').click()
    >>> browser.getControl(name='emails', index=0).value = 'user@ututi.lt'
    >>> browser.getControl('Invite').click()


If a user, who has been invited to join a group requests to join it, we consider this as an acceptance of the invitation.
    >>> browser3 = Browser.logIn('user2@ututi.lt', 'password')
    >>> browser3.open('http://localhost/group/moderators')
    >>> browser3.url
    'http://localhost/group/moderators/home'

    >>> browser3.getControl('become a member').click()
    >>> browser3.printQuery("//div[@class='flash-message']/span/text()")
    You are now a member of the group Moderatoriai!
