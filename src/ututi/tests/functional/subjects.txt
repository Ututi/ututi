Subject adding and import
=========================

A list of all subjects is shown at /subjects.

    >>> browser = Browser.logIn()

    >>> browser.open('http://localhost/admin/subjects')
    >>> browser.printQuery("id('subject_list')//li/a[@class='subject-link']/text()")
    Matematinė analizė

The link of the subject leads to its home page.

    >>> browser.getLink('Matematinė analizė').url
    'http://localhost/subject/vu/mat_analize'

    >>> browser.getLink('Matematinė analizė').click()
    >>> browser.url
    'http://localhost/subject/vu/mat_analize'
    >>> browser.printQuery("id('mainContent')//h2/text()")
    Subject files
    Subject's Wiki Pages (0)

From there we can edit the subject.

    >>> browser.open('http://localhost/subject/vu/mat_analize/edit')
    >>> browser.getControl('Lecturer').value = 'Some other guy'
    >>> browser.getControl('Save').click()

The changed information should  be visible in the sidebar block.

    >>> browser.printQuery('//div[@class="dalyko-info"]//p/span/text()')
    Lecturer:
    Some other guy
    Subject rating:
    The subject is watched by:
    user,
    groups


The subject's portlet contains a link that can be used to start watching the subject.

    >>> browser.getControl('Add to my subjects').click()
    >>> browser.printQuery("//div[@class='flash-message']/span/text()")
    The subject has been added to your watched subjects list.

If we click the link again, we stop watching the subject
We can add a subject at the url /subject/add

    >>> browser.getControl('Remove from my subjects').click()
    >>> browser.printQuery("//div[@class='flash-message']/span/text()")
    The subject has been removed from your watched subjects list.

    And the button's action turns into 'watch subject' again
    >>> browser.getControl('Add to my subjects')
    <SubmitControl name=None type='submitbutton'>

    >>> browser.open('http://localhost/subjects/add')

    >>> browser.getControl(name='location-1').value = 'vu'
    >>> browser.getControl('Title').value = 'Test subject'
    >>> browser.getControl('Save').click()
    >>> print browser.url
    http://localhost/subject/vu/test_subject

The id is checked for uniqueness.

    >>> browser.open('http://localhost/subjects/add')
    >>> browser.getControl(name='location-1').value = 'vu'
    >>> browser.getControl('Title').value = 'Test subject'
    >>> browser.getControl('Lecturer').value = 'Some guy'
    >>> browser.getControl('Save').click()
    >>> print browser.url
    http://localhost/subject/vu/test_subject-some_guy

You can import more subjects using the admin interface.

    >>> browser.open('http://localhost/admin/import_csv')
    >>> form = browser.getForm(name='import_subjects_without_ids')
    >>> csv_data = '"Imported subject","Some Professor",,"VU","Description of the subject","imported, subject"'
    >>> import cStringIO
    >>> form.getControl('CSV File').add_file(cStringIO.StringIO(csv_data),
    ...                                      'text/plain',
    ...                                       'subjects.csv')
    >>> form.getControl('Upload').click()
    >>> browser.url
    'http://localhost/admin/subjects'
    >>> browser.printQuery("id('subject_list')//li/a[@class='subject-link']/text()")
    Imported subject
    Test subject
    Test subject
    Matematinė analizė

    >>> browser.getLink('Imported subject').click()
    >>> browser.queryHTML("id('subject_description')//div[@class='content']/text()")
    ['Description of the subject']

    >>> browser.printQuery("id('subject_info_portlet-content')//h2/text()")
    Imported subject

Bug fix confirmation: going to subjects/create directly (e.g. refreshing a failed subject form)
would cause a crash

    >>> browser.open('http://localhost/subjects/create')
    >>> print browser.url
    http://localhost/subjects/add

When creating a subject, the user can select to watch it:

    >>> browser.open('/home')
    >>> browser.getLink('create new subject').click()
    >>> browser.url
    'http://localhost/subjects/add'

    >>> browser.getControl(name='location-1').value = 'vu'
    >>> browser.getControl('Title').value = 'Testing subject'
    >>> browser.getControl('Lecturer').value = 'Some guy'
    >>> browser.getControl('Start watching this subject personally').selected = True
    >>> browser.getControl('Save').click()
    >>> print browser.url
    http://localhost/subject/vu/testing_subject

    >>> browser.printQuery("//div[@class='flash-message']/span/text()")
    You are now watching the subject Testing subject

    >>> browser.open('/profile/subjects')
    >>> browser.printQuery("id('subject_settings')//ul/li//a/text()")
    Testing subject

Subject names with parentheses should not cause problems:

    >>> browser.open('/home')
    >>> browser.getLink('create new subject').click()
    >>> browser.url
    'http://localhost/subjects/add'

    >>> browser.getControl(name='location-1').value = 'vu'
    >>> browser.getControl('Title').value = 'Šiuolaikinė anglų kalba (akademinis skaitymas)'
    >>> browser.getControl('Lecturer').value = 'Some guy'
    >>> browser.getControl('Start watching this subject personally').selected = True
    >>> browser.getControl('Save').click()
    >>> print browser.url
    http://localhost/subject/vu/siuolaikine_anglu_ka
