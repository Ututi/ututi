Test teacher's create subject workflow
======================================

Let's login as a verified teacher:

    >>> browser = Browser.logIn('benas@ututi.lt', 'password')
    >>> browser.open('http://localhost/subjects/add')


Let's enter subject's location and title, and continue the wizard:

    >>> browser.getControl('Subject title:').value = 'Math'
    >>> browser.getControl('Next').click()
    >>> browser.url
    'http://localhost/subjects/add_description'

Observe that the page doesn't show "Lecturer's" field.
Instead, a hidden value with teacher's name is silently submitted:

    >>> browser.getControl(name="lecturer").value
    'Benas'

Let's finish the wizard and create the subject:

    >>> browser.getControl('Create').click()
    >>> print browser.url
    http://localhost/subject/uni/math

On the subject page Benas is listed as the lecturer:

    >>> browser.printCssQuery("#subject-teachers-portlet .subject-teacher", strip=True)
    <li>
        Lecturer:
        <br />
        <a>Benas</a>
    </li>

This subject also appears on teacher's homepage:

    >>> browser.click('Home')
    >>> browser.click('Dashboard')
    >>> browser.printCssQuery('.subject-description-list dt a', strip=True)
    <a>Math</a>

Now back to home page and click to add another subject:

    >>> browser.click('Home')
    >>> browser.click('Dashboard')
    >>> browser.getControl('add courses').click()

Let's fill out the form to create the subject:

    >>> browser.getControl('Subject title:').value = 'Literature'
    >>> browser.getControl('Next').click()
    >>> browser.getControl('Create').click()
    >>> print browser.url
    http://localhost/subject/uni/literature

This subject also appears on teacher's homepage:

    >>> browser.getLink('Home').click()
    >>> browser.printCssQuery('.subject-description-list dt a', strip=True)
    <a>Math</a>
    <a>Literature</a>
