User registration
=================

Our new users will be greated by a page that has a registration form
in it:

    >>> browser = Browser()
    >>> browser.open('http://localhost/')
    >>> form = browser.getForm('registration_form')

We will only require your email address, name and password:

    >>> form.getControl('Full name').value = 'Jonas Petraitis Petrauskas'
    >>> form.getControl('Email').value = 'jonas@example.com'
    >>> form.getControl('Password').value = 'asdfgh'
    >>> form.getControl('Repeat password').value = 'asdfgh'
    >>> form.getControl(name='agree').value = True
    >>> form.getControl('Register').click()

After registration is complete we should be hailed by our welcome
screen:

    >>> browser.url
    'http://localhost/register/welcome'

An email, requesting the confirmation of the email address entered is sent:

    >>> from ututi.lib.mailer import mail_queue
    >>> email = mail_queue.pop()
    >>> print email.message
    MIME-Version: 1.0
    Content-Type: text/plain; charset="us-ascii"
    Content-Transfer-Encoding: 7bit
    From: info@ututi.lt
    To: jonas@example.com
    Subject: Confirm the email for Ututi
    <BLANKLINE>
    We have received a request to confirm the ownership of this email
    by Jonas Petraitis Petrauskas on the Ututi system. If this email
    belongs to you, confirm it by clicking on this link:
    <BLANKLINE>
    http://localhost/confirm_user_email/...
    <BLANKLINE>
    Ututi team
    <BLANKLINE>


    >>> print email.recipients
    [u'jonas@example.com']

    >>> from ututi.lib.helpers import get_urls
    >>> urls = get_urls(email.message)
    >>> len(urls)
    1

    >>> browser.open(urls[0])
    >>> browser.printQuery("//div[@class='flash-message']/span/text()")
    Your email jonas@example.com has been confirmed, thanks.

What if we clicked the link again?

     >>> browser.open(urls[0])
     >>> browser.printQuery("//div[@class='flash-message']/span/text()")
     Could not confirm email: invalid confirmation key.

     >>> print browser.url
     http://localhost/home

We have been logged in after signing up. Now let's log out and test more unfortunate
scenarios:

    >>> browser.open('http://localhost/')
    >>> browser.getLink('log out').click()
    >>> browser.url
    'http://localhost/'

If we forget to enter the username, we get returned to the registration form, but an error
message is shown:

    >>> form = browser.getForm('registration_form')
    >>> form.getControl('Email').value = 'jonas2@example.com'
    >>> form.getControl('Password').value = 'asdfgh'
    >>> form.getControl('Repeat password').value = 'asdfgh'
    >>> form.getControl(name='agree').value = True
    >>> form.getControl('Register').click()
    >>> browser.url
    'http://localhost/register'

    >>> browser.printQuery("//span[@class='error-message']/text()")
    Please enter your name to register.

Ok, now we forget to enter the email when registering. We should be redirected to the
registration form and shown an error message that we've forgotten the email.

    >>> form = browser.getForm('join_registration_form')
    >>> form.getControl('Full name').value = 'Domas Monkus'
    >>> form.getControl('Password').value = 'asdfgh'
    >>> form.getControl('Repeat password').value = 'asdfgh'
    >>> form.getControl('Email').value = ''
    >>> form.getControl(name='agree').value = True
    >>> form.getControl('Register').click()
    >>> browser.url
    'http://localhost/register?register=True'

    >>> browser.printQuery("//span[@class='error-message']/text()")
    Please enter an email address

If we forget to enter the password, we should also get an error message.

    >>> form = browser.getForm('join_registration_form')
    >>> form.getControl('Full name').value = 'Domas Monkus'
    >>> form.getControl('Email').value = 'domas@ututi.com'
    >>> form.getControl('Password').value = ''
    >>> form.getControl('Repeat password').value = ''
    >>> form.getControl(name='agree').value = True
    >>> form.getControl('Register').click()
    >>> browser.url
    'http://localhost/register?register=True'

    >>> browser.printQuery("//span[@class='error-message']/text()")
    Please enter your password to register.
    Please enter your password to register.

If the passwords do not match we also get an error message.

    >>> form = browser.getForm('join_registration_form')
    >>> form.getControl('Full name').value = 'Domas Monkus'
    >>> form.getControl('Password').value = 'abcdefgh'
    >>> form.getControl('Repeat password').value = 'abcdef'
    >>> form.getControl('Email').value = 'jonas3@example.com'
    >>> form.getControl(name='agree').value = True
    >>> form.getControl('Register').click()
    >>> browser.url
    'http://localhost/register?register=True'

    >>> browser.printQuery("//span[@class='error-message']/text()")
    Passwords do not match.

If such an email already exists, we also get an error message (later we should get a link to reset the password if
we have forgotten it).

    >>> form = browser.getForm('join_registration_form')
    >>> form.getControl('Full name').value = 'Domas Monkus'
    >>> form.getControl('Password').value = 'abcdefgh'
    >>> form.getControl('Repeat password').value = 'abcdefgh'
    >>> form.getControl('Email').value = 'jonas@example.com'
    >>> form.getControl(name='agree').value = True
    >>> form.getControl('Register').click()
    >>> browser.url
    'http://localhost/register?register=True'

    >>> browser.printQuery("//span[@class='error-message']/text()")
    This email has already been used to register.

Bug fix confirm: passwords with non-ascii chars would crash the registration.

    >>> browser.open('http://localhost/')

    >>> form = browser.getForm('registration_form')
    >>> form.getControl('Full name').value = 'Jonas Petraitis Petrauskas'
    >>> form.getControl('Email').value = 'jonas_new@example.com'
    >>> form.getControl('Password').value = u'\u0105\u010d\u0119\u0117\u012f\u0161'.encode('utf-8')
    >>> form.getControl('Repeat password').value = u'\u0105\u010d\u0119\u0117\u012f\u0161'.encode('utf-8')
    >>> form.getControl(name='agree').value = True
    >>> form.getControl('Register').click()

    >>> browser.printQuery("//span[@class='error-message']/text()")

A newly registered user will not have his location set, so he will be shown a form to set it:

    >>> form = browser.getForm('update-location-form')
    >>> form.getControl(name='location-0').value = 'Vilniaus universitetas'
    >>> form.getControl('save').click()
    >>> browser.printQuery("//div[@class='flash-message']/span/text()")
    Your university information has been updated.
    Your email (jonas_new@example.com) is not confirmed! Please confirm your email by clicking on the link sent to your address or

After setting his location, he will not be shown the form again:
    >>> browser.printQuery("id('page-content')//h2/text()")

    >>> email = mail_queue.pop()

---------------------------------------
Test a curiuos case: if a logged-in user fills in a registration form, specifying his own email, uniqueness is not tested.

    >>> browser = Browser.logIn()
    >>> browser.open('http://localhost/join?came_from=%2Fschool%2Fvu')
    >>> form = browser.getForm('join_registration_form')
    >>> form.getControl('Full name').value = 'domas'
    >>> form.getControl('Email').value = 'admin@ututi.lt'
    >>> form.getControl('Password').value = 'asdfgh'
    >>> form.getControl('Repeat password').value = 'asdfgh'
    >>> form.getControl(name='agree').value = True
    >>> form.getControl('Register').click()

    >>> browser.url
    'http://localhost/register?register=True'
