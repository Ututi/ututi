Tests for ajax file management views
====================================

File upload:

    >>> res = app.post("/login",
    ...                params={'username': 'admin@uni.ututi.com', 'password': 'asdasd'})

    >>> from textwrap import dedent
    >>> res = app.post("/subject/vu/mat_analize/upload_file",
    ...                params={'folder': ''},
    ...                upload_files=[("attachment", "text;for you.txt", "Test")])
    >>> print dedent(res.body)
    <li class="file">
     			<span class="tooltip-container">
     			</span>
     			<span class="file-description">
     					<img alt="file icon" class="drag-target" src="/img/icons.com/file_move_medium_orange.png" />
     				<a class="filename" href="/subject/vu/mat_analize/file/4/get">text;for you.txt</a>
     				<!--Edit file name -->
     					<span class="file_rename_form hidden">
     						<span class="file_rename_input_decorator">
     							<input class="file_rename_input" type="text" />
     				    	</span>
     				    	<button class="rename_confirm btn submit" value="Rename">Rename</button>
     					</span>
     				<!--FileSize-->
     				<span class="size">(4 B)</span>
     				<input class="move_url" type="hidden" value="/subject/vu/mat_analize/file/4/move" />
     				<input class="copy_url" type="hidden" value="/subject/vu/mat_analize/file/4/copy" />
     				<input class="delete_url" type="hidden" value="/subject/vu/mat_analize/file/4/delete" />
     				<input class="flag_url" type="hidden" value="/subject/vu/mat_analize/file/4/flag" />
     				<input class="rename_url" type="hidden" value="/subject/vu/mat_analize/file/4/rename" />
     				<input class="folder_title_value" type="hidden" value="" />
     			</span>
     			<span class="file-owner" >
     				<a href="/user/1" class="author" title="Adminas Adminovix" >
     				     Adminas Adminovix
     				</a>
     			</span>
     	  		<span class="file-date" ><span class="date">...</span></span>
     			<span class="file-actions" >
     				<!--Edit file btn-->
     					<img src="/images/details/icon_rename.png" alt="edit file name" class="rename_button" />
     				<!--Delete file BTN-->
     					<img src="/images/delete.png" alt="delete file" class="delete_button" />
     			</span>
     		</li>

    >>> res = app.post("/subject/vu/mat_analize/upload_file",
    ...                params={'folder': 'Some folder'},
    ...                upload_files=[("attachment", r"c:\My Home\image.png", "Tst")])
    >>> print dedent(res.body)
    <li class="file">
      ...
      <a class="filename" href="/subject/vu/mat_analize/file/5/get">image.png</a>
      ...
    </li>

    >>> res = app.post("/group/moderators/file_info",
    ...                params={'section_id': 0})
    >>> print res.body
    {"text": "\n  <div class=\"area_size\">free space: 20 B</div>\n", "image": "\n  <img alt=\"0 B\" class=\"area_size_points\" src=\"/images/details/pbar0.png\" />\n", "section_id": "0"}

    >>> res = app.post("/group/moderators/upload_status",
    ...                params={'section_id': 0})
    >>> print res.body
    {"status": 2, "section_id": "0"}

    >>> res = app.post("/group/moderators/upload_file",
    ...                params={'folder': ''},
    ...                upload_files=[("attachment", "other_text.txt", "Test Test")])
    >>> print dedent(res.body)
    <li class="file">
      ...
      <a class="filename" href="/group/moderators/file/6/get">other_text.txt</a>
      ...
    </li>

    >>> res = app.post("/group/moderators/upload_file",
    ...                params={'folder': 'Also a folder'},
    ...                upload_files=[("attachment", "more_text.txt", "Tst")])
    >>> print dedent(res.body)
    <li class="file">
      ...
      <a class="filename" href="/group/moderators/file/7/get">more_text.txt</a>
      ...
    </li>

    >>> res = app.post("/group/moderators/file_info",
    ...                params={'section_id': 0})
    >>> print res.body
    {"text": "\n  <div class=\"area_size\">free space: 8 B</div>\n", "image": "\n  <img alt=\"12 B\" class=\"area_size_points\" src=\"/images/details/pbar3.png\" />\n", "section_id": "0"}

    >>> res = app.post("/group/moderators/upload_status",
    ...                params={'section_id': 0})
    >>> print res.body
    {"status": 1, "section_id": "0"}

Empty folder creation:

    >>> res = app.post("/subject/vu/mat_analize/js_create_folder",params={'folder': 'Buga Buga','section_id': '7'})
    >>> print dedent(res.body)    
    	<div class="target_item "><div class="upload target" id="file_upload_button-...">Buga Buga</div></div>
    	<div class="folder_file_area subfolder click2show" id="file_area-...">
            <input class="folder_name" id="file_folder_name-..." type="hidden" value="Buga Buga" />
            <h4 class="">
              <span class="cont">
                Buga Buga
                <span class="small">(0 files)</span>
    	              <a  href="/subject/vu/mat_analize/delete_folder?folder=Buga+Buga" id="delete_folder_button-..." class="delete_folder_button">(Delete)</a>
              </span>
            </h4>
    		<ul class="folder">
    	              <li class="message">There are no files here, this folder is empty!</li>
    	</ul>
     		<div class="spliter">&nbsp;</div>
    	</div>
    
    >>> browser = Browser.logIn()
    >>> browser.open('http://localhost/subject/vu/mat_analize/file/8/get')
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> res = app.post("/group/moderators/js_create_folder",params={'folder': 'Uga Buga','section_id': '8'})
    >>> print dedent(res.body)
    	<div class="target_item "><div class="upload target" id="file_upload_button-...">Uga Buga</div></div>
    	<div class="folder_file_area subfolder click2show" id="file_area-...">
            <input class="folder_name" id="file_folder_name-..." type="hidden" value="Uga Buga" />
            <h4 class="">
              <span class="cont">
                Uga Buga
                <span class="small">(0 files)</span>
    	              <a  href="/group/moderators/delete_folder?folder=Uga+Buga" id="delete_folder_button-..." class="delete_folder_button">(Delete)</a>
              </span>
            </h4>
    		<ul class="folder">
    	              <li class="message">There are no files here, this folder is empty!</li>
    		</ul>
    		<div class="spliter">&nbsp;</div>
    	</div>

Deleting folders:

    >>> res = app.post("/subject/vu/mat_analize/upload_file",
    ...                params={'folder': 'Folder to delete'},
    ...                upload_files=[("attachment", "image.png", "T")])
    >>> print dedent(res.body)
    <li class="file">
      ...
      <a class="filename" href="/subject/vu/mat_analize/file/.../get">image.png</a>
      ...
    </li>

    >>> res = app.post("/group/moderators/upload_file",
    ...                params={'folder': 'Also a folder to delete'},
    ...                upload_files=[("attachment", "more_text.txt", "T")])
    >>> print dedent(res.body)
    <li class="file">
      ...
      <a class="filename" href="/group/moderators/file/.../get">more_text.txt</a>
      ...
    </li>

    >>> res = app.post("/subject/vu/mat_analize/js_delete_folder",
    ...                params={'folder': 'Folder to delete'})
    >>> res.status
    '200 OK'

    >>> res = app.post("/group/moderators/js_delete_folder",
    ...                params={'folder': 'Also a folder to delete'})
    >>> res.status
    '200 OK'

Both folders should be gone:

    >>> browser = Browser.logIn()
    >>> browser.open('http://localhost/subject/vu/mat_analize/files')
    >>> browser.printQuery('id("main-content")//h4')
    <h4 class="">
      <span class="cont">
                Buga Buga ...
      </span>
    </h4>
    <h4 class="">
      <span class="cont">
                Some folder ...
      </span>
    </h4>
    <h4 class="trash_heading">Trash</h4>

    >>> browser.open('http://localhost/group/moderators/files')
    >>> browser.printQuery('//h4')
    <h4 class="">
      <span class="cont">
                Also a folder ...
      </span>
    </h4>
    <h4 class="">
      <span class="cont">
                Uga Buga ...
      </span>
    </h4>
    <h4 class="trash_heading">Trash</h4>

Flagging files:

    >>> print app.get('/subject/vu/mat_analize/file/4/flag').body
    <form method="post" action="." class="fullForm fileFlagForm">
      <div>
        <div class="formField" id="reason-field"><label for="reason"><span class="labelText">Please state the reason why the file 'text;for you.txt' is inappropriate:</span><span class="textField"><textarea cols="30" id="reason" name="reason" rows="5"></textarea></span></label></div>
        <button class="submit" value="Submit">Submit</button>
      </div>
    </form>

    >>> app.post('/subject/vu/mat_analize/file/4/flag',
    ...           params={'reason': 'Copyright violation'}).status
    '200 OK'

An email should have been sent:

    >>> from ututi.lib.mailer import mail_queue
    >>> print mail_queue.pop().payload()
    A file has been flagged as inappropriate.
    <BLANKLINE>
    filename: 'text;for you.txt'
    file URL: http://localhost:80/subject/vu/mat_analize/file/4/get
    <BLANKLINE>
    parent: Matematinė analizė
    parent URL: http://localhost:80/subject/vu/mat_analize
    <BLANKLINE>
    reporter: admin@uni.ututi.com
    <BLANKLINE>
    reason:
    Copyright violation

Partial requests:
    >>> app.get('/subject/vu/mat_analize/file/4/get', expect_errors=True).body
    'Test'

    >>> app.get('/subject/vu/mat_analize/file/4/get', expect_errors=True, headers={'Range':'bytes=2-3'}).body
    'st'

Check if the partial download ranges were recorded:
    >>> from ututi.model import meta, FileDownload
    >>> print [(fd.file_id, fd.range_start, fd.range_end) for fd in meta.Session.query(FileDownload).filter_by(user_id=1).all()]
    [(4L, None, None), (4L, 2L, 4L)]

Deleting files:

    >>> app.get('/subject/vu/mat_analize/file/4/delete').status
    '200 OK'

    >>> app.get('/group/moderators/file/6/delete').status
    '200 OK'

    >>> app.get('/subject/vu/mat_analize/file/4/get', expect_errors=True).status
    '404 Not Found'

    >>> app.get('/group/moderators/file/6/get', expect_errors=True).status
    '404 Not Found'

Group payments:

Once the group's private files reach a limit, no more files can be uploaded.

    >>> res = app.post("/group/moderators/upload_file",
    ...                params={'folder': ''},
    ...                upload_files=[("attachment", "more_text.txt", "12345678901234567890")])
    >>> print dedent(res.body)
    <li class="file">
      ...
      <a class="filename" href="/group/moderators/file/.../get">more_text.txt</a>
      ...
    </li>

    >>> res = app.post("/group/moderators/upload_file",
    ...                params={'folder': ''},
    ...                upload_files=[("attachment", "over.txt", "over the limit")])
    >>> print dedent(res.body)
    UPLOAD_FAILED

    >>> res = app.post("/group/moderators/file_info",
    ...                params={'section_id': 0})
    >>> print res.body
    {"text": "\n  <div class=\"area_size\">free space: 0 B</div>\n", "image": "\n  <img alt=\"23 B\" class=\"area_size_points\" src=\"/images/details/pbar5.png\" />\n", "section_id": "0"}

The disabled upload control is shown with a message encouraging users to pay
for the service.

    >>> browser.open('http://localhost/group/moderators/files')
    >>> browser.printQuery('//div[@class="upload_control no_upload "]')
    <div class="upload_control no_upload">
      <table>
        <tr>
          <td colspan="2">
            <form action="/group/moderators/pay" class="button-to" method="post">
              <fieldset>
                <button class="btn" type="submit" value="Increase limits">
                  <span>Increase limits</span>
                </button>
              </fieldset>
            </form>
          </td>
        </tr>
      </table>
    </div>

    >>> browser.getControl('Increase limits').click()
    >>> browser.url
    'http://localhost/group/moderators/pay'

    >>> browser.printCssQuery('.static-content', strip=True)
    <div>The amount of group's private files is limited to 20 B.
    This is so because VUtuti encourages users to store their files
    in publicly accessible subjects where they can be shared with
    all the users. But if You want to keep more than 20 B of files,
    You can do this.</div>
    <div>There are no ways to pay for additional group space at the moment.</div>

    >>> browser.open('http://localhost/group/moderators/files')
