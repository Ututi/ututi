Tests for group mailing list moderation queue
=============================================

The default setting allows only group members post emails to the
mailing list, so if someone sends an email to the mailing list while
not being on it, the email is just ignored:

    >>> from ututi.tests.functional import send_test_message
    >>> send_test_message('email_from_user2.txt', '33', to='moderators@groups.ututi.lt')
    >>> send_test_message('email_from_non_ututi.txt', '42', to='moderators@groups.ututi.lt', subject='Hello from varlius')

    >>> browser = Browser.logIn('admin@ututi.lt', 'asdasd')
    >>> browser.getLink('Moderatoriai').click()
    >>> browser.getLink('Mailing List').click()
    >>> browser.printQuery('//div[@class="no-messages"]/text()')
    No messages yet.

Now if we go to the group settings page and set it so it would allow
other people to post emails to our mailing list, a moderation queue
get's enabled and all the emails that are sent to the group from
non-group members will get posted into the queue.

First we go to the settings page and set the value:

    >>> browser.getLink('Edit').click()
    >>> browser.getControl('Moderated').click()
    >>> browser.getControl('Save').click()

This time if we post the email, we will still not get it in our
mailing list:

    >>> send_test_message('email_from_user2.txt', '33', to='moderators@groups.ututi.lt')

    >>> browser.getLink('Mailing List').click()
    >>> browser.printQuery('//div[@class="no-messages"]/text()')
    No messages yet.

No email messages will be sent to group members either:

    >>> from ututi.lib.mailer import mail_queue
    >>> len(mail_queue)
    0

But we will see it in the moderation queue:

    >>> browser.getControl('Administration').click()
    >>> browser.printQuery("id('single-messages')//div[contains(@class, 'm-on')]//text()")
    Hello
    Hi, I am just writing to tell you how wonderful...

We can see the content of the message by clicking on it's title:

    >>> browser.getLink('Hello').click()
    >>> browser.printQuery("//div[@class='post-body']//text()")
    Hi, I am just writing to tell you how wonderful this system is.
    User2

Messages from non-ututi users are treated in a special way, as these
messages don't have an author:

    >>> send_test_message('email_from_non_ututi.txt', '42', to='moderators@groups.ututi.lt', subject='Hello from varlius')

Now we should see 2 messages in the list:

    >>> browser.getLink('Back to the moderation queue').click()
    >>> browser.printQuery("id('single-messages')//div[contains(@class, 'm-on')]//text()")
    Hello
    Hi, I am just writing to tell you how wonderful...
    <BLANKLINE>
    Hello from varlius
    Confirm your varlius registration!
    Click the l...

We click "Reject" button for the second message and get redirected to the same page.
app.post is used because of the bug in TestBrowser redirection behaviour.

    >>> action_url = browser.getControl('Reject', index=1).mech_form.action
    >>> res = app.post("/login",
    ...                params={'login': 'admin@ututi.lt', 'password': 'asdasd'})
    >>> res = app.post(action_url,
    ...                headers=[('referer', browser.url)])
    >>> print res.status, res.location
    302 Found http://localhost/group/moderators/mailinglist/administration

The second message was rejected so it is not shown in the moderation queue,
only the first message is left:

    >>> browser.reload()
    >>> browser.printQuery("id('single-messages')//div[contains(@class, 'm-on')]//text()") # doctest: -ELLIPSIS
    Hello
    Hi, I am just writing to tell you how wonderful...

The corresponding event is removed from the wall as well:

    >>> browser.getLink("News wall").click()
    >>> browser.printQuery('id("wall")//div[@class="description"]//text()')
    Second user has posted a new message Hello to the group's Moderatoriai moderation queue.
    Adminas Adminovix has created the group Moderatoriai .
    Adminas Adminovix joined the group Moderatoriai .
    Third user joined the group Moderatoriai .

Let's get back to the mailing list. Still no messages here:

    >>> browser.getLink('Mailing List').click()
    >>> browser.printQuery('//div[@class="no-messages"]/text()')
    No messages yet.

In the administration view one message is still left. Let's approve it:

    >>> browser.getControl('Administration').click()
    >>> action_url = browser.getControl('Accept').mech_form.action
    >>> res = app.post(action_url,
    ...                headers=[('referer', browser.url)])
    >>> print res.status, res.location
    302 Found http://localhost/group/moderators/mailinglist/administration

Now the message should appear in the actual mailing list:

    >>> browser.getLink('Mailing List').click()
    >>> browser.printQuery("id('single-messages')//div[contains(@class, 'm-on')]//text()") # doctest: -ELLIPSIS
    Hello
    (0 replies)
    Hi, I am just writing to tell you how wonderful...

The corresponding event is removed from wall:

    >>> browser.getLink('News wall').click()
    >>> browser.printQuery('id("wall")//div[@class="description"]//text()')
    Second user has posted a new message Hello to the group Moderatoriai .
    Adminas Adminovix has created the group Moderatoriai .
    Adminas Adminovix joined the group Moderatoriai .
    Third user joined the group Moderatoriai .

XXX Test looking at an approved message without an author.
XXX Test moderation events not being sent through email.
XXX Test flash messages warning about the redirects, when they are not intuitive.
XXX Test redirection behavior, if administrator tries to view a message already accepted/rejected by someone else.
XXX Test message approval via the wall (possibly in separate functional test).
XXX Test bulletproofness of accept/reject methods.
