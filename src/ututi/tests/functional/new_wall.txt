Functional test for the new wall
================================

    >>> from ututi.lib.mailer import mail_queue

Login and visit the wall. Currently there's no link, so we use direct url:

    >>> user3 = Browser.logIn('user3@ututi.lt', 'password')
    >>> user3.open('/profile/wall')

The page title should say "What's new?":

    >>> user3.printQuery("//h1[@class='pageTitle']/text()")
    What's new?

Right next to the title there's a link to wall settings:

    >>> user3.getLink("Wall settings").click()
    >>> user3.url
    'http://localhost/profile/edit/wall'

    >>> user3.goBack()

The wall currently lists several simple events:

    >>> user3.printQuery("//div[contains(@class, 'wall-entry')]//text()")
    Adminas Adminovix has created the subject Matematinė analizė .  ...
    Third user joined the group Moderatoriai .  ...
    Adminas Adminovix joined the group Moderatoriai .  ...
    Adminas Adminovix has created the group Moderatoriai .  ...

Let's use wall's action panel to send private message to the user user:

    >>> form = user3.getForm(id='message_form')
    >>> form.getControl('Group or user:').value = 'Alternative user'
    >>> form.getControl(name='subject').value = 'Private message title'
    >>> form.getControl(name='message').value = 'Private message'
    >>> form.getControl('Send').click()

Now the user user logs in and finds the private message in his wall:

    >>> user = Browser.logIn('user@ututi.lt', 'password')
    >>> user.open('/profile/wall')
    >>> user.printQuery("//div[contains(@class, 'wall-entry')]//text()")
    Third user has sent you a private message " Private message title "  ...
    Private message ...

He can reply using the wall reply box. (If not using javascript, user is
directed to the thread page after he clicks 'Send'.)

    >>> form = user.getForm(name='reply-form')
    >>> form.getControl(name='message').value = 'Private message reply'
    >>> form.getControl("Send reply").click()
    >>> user.url
    'http://localhost/profile/wall'

The user3 user can see the reply threaded along his message:

    >>> user3.open('/profile/wall')
    >>> user3.printQuery("//div[contains(@class, 'wall-entry')]//text()")
    You have sent Alternative user a private message " Private message title "  ...
    Private message ...
    Alternative user : Private message reply ...

The mailing list messaging works pretty same way in the wall. To test this,
we will log in third user, that is in the same group as user:

    >>> admin = Browser.logIn('admin@ututi.lt', 'asdasd')
    >>> admin.open('/profile/wall')
    >>> form = admin.getForm(id='message_form')
    >>> form.getControl('Group or user:').value = 'Moderatoriai'
    >>> form.getControl(name='subject').value = 'Mailinglist message title'
    >>> form.getControl(name='message').value = 'Mailinglist message'
    >>> form.getControl('Send').click()

    >>> admin.url
    'http://localhost/profile/wall'

User3 can see his message on his wall:

    >>> user3.reload()
    >>> user3.printQuery("//div[contains(@class, 'wall-entry')]//text()")
    Adminas Adminovix has posted a new message Mailinglist message title to the group Moderatoriai
    ...

The message is sent via email:

    >>> len(mail_queue)
    1

    >>> print mail_queue.pop().payload()
    Mailinglist message

We can reply these messages the same way as private messages:

    >>> form = user3.getForm(name='reply-form', index=0)
    >>> form.getControl(name='message').value = 'Mailinglist message reply'
    >>> form.getControl("Send reply").click()
    >>> user3.url
    'http://localhost/profile/wall'

    >>> admin.open('/profile/wall')
    >>> admin.printQuery("//div[contains(@class, 'wall-entry')]//text()")
    Adminas Adminovix has posted a new message Mailinglist message title to the group Moderatoriai ...
    Mailinglist message ...
    Third user : Mailinglist message reply
    ...

    >>> print mail_queue.pop().payload()
    Mailinglist message reply

See how replying to an older thread lifts it in the wall. To test that,
we will ask third user to reply to the private message:

    >>> user3.open('/profile/wall')
    >>> form = user3.getForm(name='reply-form', index=1)
    >>> form.getControl(name='message').value = 'Private message reply 2'
    >>> form.getControl("Send reply").click()
    >>> user3.url
    'http://localhost/profile/wall'

    >>> user3.open('/profile/wall')
    >>> user3.printQuery("//div[contains(@class, 'wall-entry')]//text()")
    You have sent Alternative user a private message " Private message title " ...
    Private message ...
    Alternative user : Private message reply ...
    Third user : Private message reply 2 ...
    Adminas Adminovix has posted a new message Mailinglist message title to the group Moderatoriai ...
    Mailinglist message ...
    Third user : Mailinglist message reply ...

To test forum post threading we will use the group will forum enabled:

    >>> form = admin.getForm(id='message_form')
    >>> form.getControl('Group or user:').value = 'Testing group'
    >>> form.getControl(name='subject').value = 'Forum post title'
    >>> form.getControl(name='message').value = 'Forum post'
    >>> form.getControl('Send').click()

XXX need to fix this and continue testing forum post threading:
