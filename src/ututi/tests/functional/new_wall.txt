Functional test for the new wall
================================

    >>> from ututi.lib.mailer import mail_queue

    >>> def printWallEvents(browser):
    ...     browser.printCssQuery(".wall-entry .event-title, .wall-entry .event-content", include_attributes=['class'], include_classes=['event-content', 'event-title'])

Login and visit the wall. Currently there's no link, so we use direct url:

    >>> user3 = Browser.logIn('user3@ututi.lt', 'password')
    >>> user3.url
    'http://localhost/home'

    >>> user3.open('/profile/wall')

The page title should say "What's new?":

    >>> user3.printQuery("//h1[@class='pageTitle']/text()")
    What's new?

Right next to the title there's a link to wall settings:

    >>> user3.getLink("Wall settings").click()
    >>> user3.url
    'http://localhost/profile/edit/wall'

    >>> user3.goBack()

The wall currently lists several simple events:

    >>> user3.printQuery("//div[contains(@class, 'wall-entry')]//text()")
    Adminas Adminovix has created the group Moderatoriai 0 seconds ago
    Adminas Adminovix has joined the group Moderatoriai 0 seconds ago
    You have joined the group Moderatoriai 0 seconds ago
    Adminas Adminovix has created the subject Matematin&#279; analiz&#279; 0 seconds ago

Let's use wall's action panel to send private message to the user user:

    >>> form = user3.getForm(id='message_form')
    >>> form.getControl('Group or user:').value = 'Alternative user'
    >>> form.getControl(name='subject').value = 'Private message title'
    >>> form.getControl(name='message').value = 'Private message'
    >>> form.getControl('Send').click()
    >>> user3.url
    'http://localhost/profile/wall'

Now the user user logs in and finds the private message in his wall:

    >>> user = Browser.logIn('user@ututi.lt', 'password')
    >>> user.url
    'http://localhost/home'

    >>> user.open('/profile/wall')
    >>> printWallEvents(user)
    <span class="event-title">
        <a>Third user</a> has sent you a private message "<a>Private message title</a>"
    </span>
    <span class="event-content">Private message</span>

He can reply using the wall reply box. (If not using javascript, user is
directed to the thread page after he clicks 'Send'.)

    >>> form = user.getForm(name='reply-form')
    >>> form.getControl(name='message').value = 'Private message reply'
    >>> form.getControl("Send reply").click()
    >>> user.url
    'http://localhost/profile/wall'

The user3 user can see the reply threaded along his message:

    >>> user3.open('/profile/wall')
    >>> printWallEvents(user3)
    <span class="event-title">
        You have sent <a>Alternative user</a> a private message "<a>Private message title</a>"
    </span>
    <span class="event-content">Private message</span>
    <span class="event-content">Private message reply</span>
    ...

The mailing list messaging works pretty same way in the wall. To test this,
we will log in third user, that is in the same group as user:

    >>> admin = Browser.logIn('admin@ututi.lt', 'asdasd')
    >>> admin.open('/profile/wall')
    >>> form = admin.getForm(id='message_form')
    >>> form.getControl('Group or user:').value = 'Moderatoriai'
    >>> form.getControl(name='subject').value = 'Mailinglist message title'
    >>> form.getControl(name='message').value = 'Mailinglist message'
    >>> form.getControl('Send').click()

    >>> admin.url
    'http://localhost/profile/wall'

User3 can see his message on his wall:

    >>> user3.reload()
    >>> printWallEvents(user3)
    <span class="event-title">
      <a>Adminas Adminovix</a> has posted a new message <a>Mailinglist message title</a> to the group <a>Moderatoriai</a>
    </span>
    ...

The message is sent via email:

    >>> len(mail_queue)
    1

    >>> mail_queue.pop().payload()
    'Mailinglist message'

We can reply these messages the same way as private messages:

    >>> form = user3.getForm(name='reply-form', index=0)
    >>> form.getControl(name='message').value = 'Mailinglist message reply'
    >>> form.getControl("Send reply").click()
    >>> user3.url
    'http://localhost/profile/wall'

If admin reloads his wall he will see this reply threaded to his original
message. Note: admin.reload() here would cause admin repost his original message
-- a bug in testbrowser?

    >>> admin.open('/profile/wall')
    >>> printWallEvents(admin)
    <span class="event-title">
        You have posted a new message <a>Mailinglist message title</a> to the group <a>Moderatoriai</a>
    </span>
    <span class="event-content">Mailinglist message</span>
    <span class="event-content">Mailinglist message reply</span>
    ...

    >>> print mail_queue.pop().payload()
    Mailinglist message reply

See how replying to an older thread lifts it in the wall. To test that,
we will ask third user to reply to the private message:

    >>> form = user3.getForm(name='reply-form', index=1)
    >>> form.getControl(name='message').value = 'Private message reply 2'
    >>> form.getControl("Send reply").click()
    >>> user3.url
    'http://localhost/profile/wall'

    >>> printWallEvents(user3)
    <span class="event-title">
        You have sent <a>Alternative user</a> a private message "<a>Private message title</a>"
    </span>
    <span class="event-content">Private message</span>
    <span class="event-content">Private message reply</span>
    <span class="event-content">Private message reply 2</span>
    <span class="event-title">
      <a>Adminas Adminovix</a> has posted a new message <a>Mailinglist message title</a> to the group <a>Moderatoriai</a>
    </span>
    <span class="event-content">Mailinglist message</span>
    <span class="event-content">Mailinglist message reply</span>
    ...

To test forum post threading we will use the group will forum enabled:

    >>> form = admin.getForm(id='message_form')
    >>> form.getControl('Group or user:').value = 'Testing group'
    >>> form.getControl(name='subject').value = 'Forum post title'
    >>> form.getControl(name='message').value = 'Forum post'
    >>> form.getControl('Send').click()

    >>> admin.url
    'http://localhost/profile/wall'

    >>> printWallEvents(admin)
    <span class="event-title">
        You have posted a new message <a>Forum post title</a> in the forum <a>Testing group</a>
    </span>
    <span class="event-content">Forum post</span>
    ...

User can immediately reply to this forum thread from his wall:

    >>> form = admin.getForm(name='reply-form', index=0)
    >>> form.getControl(name='message').value = 'Forum post reply'
    >>> form.getControl("Send reply").click()
    >>> admin.url
    'http://localhost/profile/wall'

    >>> printWallEvents(admin)
    <span class="event-title">
        You have posted a new message <a>Forum post title</a> in the forum <a>Testing group</a>
    </span>
    <span class="event-content">Forum post</span>
    <span class="event-content">Forum post reply</span>
    ...

Group's mailinglist thread is also displayed in group's wall:

    >>> admin.getLink("Moderatoriai").click()
    >>> printWallEvents(admin)
    <span class="event-title">
        You have posted a new message <a>Mailinglist message title</a> to the group <a>Moderatoriai</a>
    </span>
    <span class="event-content">Mailinglist message</span>
    <span class="event-content">Mailinglist message reply</span>
    <span class="event-title">
        You have created the group <a>Moderatoriai</a>
    </span>
    <span class="event-title">
        You have joined the group <a>Moderatoriai</a>
    </span>
    <span class="event-title">
      <a>Third user</a> has joined the group <a>Moderatoriai</a>
    </span>

User can also reply to these threads from group's wall:

    >>> form = admin.getForm(name='reply-form', index=0)
    >>> form.getControl(name='message').value = 'Mailinglist message reply from group wall'
    >>> form.getControl("Send reply").click()
    >>> admin.url
    'http://localhost/group/moderators/home'

    >>> printWallEvents(admin)
    <span class="event-title">
        You have posted a new message <a>Mailinglist message title</a> to the group <a>Moderatoriai</a>
    </span>
    <span class="event-content">Mailinglist message</span>
    <span class="event-content">Mailinglist message reply</span>
    <span class="event-content">Mailinglist message reply from group wall</span>
    ...

    >>> print mail_queue.pop().payload()
    Mailinglist message reply from group wall

The same applies to forums: thread is displayed in groups wall.
The Testing group has forums enabled, so we will use this group to test this
functionality:

    >>> admin.getLink("Testing group").click()
    >>> printWallEvents(admin)
    <span class="event-title">
      You have posted a new message <a>Forum post title</a> in the forum <a>Testing group</a>
    </span>
    <span class="event-content">Forum post</span>
    <span class="event-content">Forum post reply</span>
    <span class="event-title">
      You have created the group <a>Testing group</a>
    </span>
    <span class="event-title">
      You have joined the group <a>Testing group</a>
    </span>
    <span class="event-title">
      <a>Second user</a> has joined the group <a>Testing group</a>
    </span>

    >>> form = admin.getForm(name='reply-form', index=0)
    >>> form.getControl(name='message').value = 'Forum post reply from group wall'
    >>> form.getControl("Send reply").click()
    >>> admin.url
    'http://localhost/group/testgroup/home'

    >>> printWallEvents(admin)
    <span class="event-title">
        You have posted a new message <a>Forum post title</a> in the forum <a>Testing group</a>
    </span>
    <span class="event-content">Forum post</span>
    <span class="event-content">Forum post reply</span>
    <span class="event-content">Forum post reply from group wall</span>
    ...
